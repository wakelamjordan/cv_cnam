name: Industrialisation continue sur le serveur Alwaysdata

on:
  push:

jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd $HOME/www/
            echo "Connexion réussie au serveur."

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Clone repo
  #       uses: actions/checkout@v3

  #     - name: Installer Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Installer les dépendances
  #       run: |
  #         npm install

  #     - name: Exécuter le build de l'application
  #       run: |
  #         npm run build

  #     - name: Archiver le dossier `out`
  #       run: |
  #         tar -czf out.tar.gz out

  #     - name: Vérifier le contenu de l'archive
  #       run: |
  #         tar -tzf out.tar.gz

  #     - name: Télécharger l'archive pour transfert
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: out-archive
  #         path: out.tar.gz

  Copy:
    # needs: build
    runs-on: ubuntu-latest
    steps:
      # - name: Télécharger l'archive créée
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: out-archive

      - name: Connexion SSH avec le serveur
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            last_directory=$(basename ${{ runner.workspace }})
            cd $HOME/

            if [ "$(ls -A ./www)" ]; then
              rsync -r --delete ./$last_directory/out ./www
              rm -rf ./$last_directory
            else
              echo "Le répertoire flask de destination sur votre serveur n'existe pas"
              exit 1
            fi


            # echo "Suppression de l'ancien contenu."
            # rm -rf ./*
            
            # echo "Copie du nouvel archive."
            # mkdir -p temp
            # mv ../out.tar.gz temp/
            # cd temp
            
            # echo "Extraction des fichiers."
            # tar -xzf out.tar.gz -C ../www/
            
            # echo "Nettoyage des fichiers temporaires."
            # cd ..
            # rm -rf temp
            # echo "Déploiement terminé."
